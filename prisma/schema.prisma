// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id           String        @id @db.VarChar(255)
  name         String        @unique
  User         User[]
  applications Application[]
  tagGroups    TagGroup[]
  apiClients   ApiClients[]
  clients      Client[]

  @@map("accounts")
}

model User {
  id        String  @id @db.VarChar(255)
  email     String  @unique
  password  String
  firstName String? @map("first_name")
  lastName  String? @map("last_name")
  role      String?

  account   Account @relation(fields: [accountId], references: [id])
  accountId String  @map("account_id") @db.VarChar(255)

  ApplicationTeamMember ApplicationTeamMember[]
  @@map("users")
}

model Client {
  id   String @id @db.VarChar(255)
  name String @unique @db.VarChar(255)

  account   Account @relation(fields: [accountId], references: [id])
  accountId String  @map("account_id") @db.VarChar(255)

  applications Application[]

  @@map("clients")
}

model ApiClients {
  id     String  @id @db.VarChar(255)
  name   String? @db.VarChar(255)
  apiKey String? @map("api_key") @db.VarChar(255)

  account   Account @relation(fields: [accountId], references: [id])
  accountId String  @map("account_id") @db.VarChar(255)

  @@map("api_clients")
}

model Application {
  id          String  @id @db.VarChar(255)
  name        String
  description String? @db.LongText

  client   Client @relation(fields: [clientId], references: [id])
  clientId String @map("client_id") @db.VarChar(255)

  account   Account @relation(fields: [accountId], references: [id])
  accountId String  @map("account_id") @db.VarChar(255)

  teamMembers ApplicationTeamMember[]
  assets      ApplicationAsset[]
  notes       ApplicationNote[]
  tags        ApplicationTag[]
  links       ApplicationLink[]

  @@unique([name])
  @@map("applications")
}

model ApplicationNote {
  id   String @id @db.VarChar(255)
  text String @db.LongText

  application   Application? @relation(fields: [applicationId], references: [id])
  applicationId String?      @map("application_id") @db.VarChar(255)

  @@map("application_notes")
}

model ApplicationLink {
  id   String @id @db.VarChar(255)
  type String @db.VarChar(255)
  url  String @db.VarChar(255)

  application   Application? @relation(fields: [applicationId], references: [id])
  applicationId String?      @map("application_id") @db.VarChar(255)

  tag   Tag?    @relation(fields: [tagId], references: [id])
  tagId String? @map("tag_id") @db.VarChar(255)

  @@map("application_links")
}

model ApplicationTag {
  id    String @id @db.VarChar(255)
  label String

  tag   Tag?    @relation(fields: [tagId], references: [id])
  tagId String? @map("tag_id") @db.VarChar(255)

  application   Application? @relation(fields: [applicationId], references: [id])
  applicationId String?      @map("application_id") @db.VarChar(255)

  @@unique([tagId, applicationId])
  @@map("application_tags")
}

model ApplicationTeamMember {
  id            String       @id @db.VarChar(255)
  userFullName  String       @map("user_full_name") @db.VarChar(255)
  User          User         @relation(fields: [userId], references: [id])
  userId        String       @map("user_id")
  tag           Tag?         @relation(fields: [tagId], references: [id])
  tagId         String?      @map("tag_id") @db.VarChar(255)
  application   Application? @relation(fields: [applicationId], references: [id])
  applicationId String?      @map("application_id") @db.VarChar(255)

  @@map("application_team_members")
}

// uploads: images, PDF files
model ApplicationAsset {
  id            String       @id @db.VarChar(255)
  type          String       @db.VarChar(255)
  filename      String       @db.VarChar(255)
  description   String?
  application   Application? @relation(fields: [applicationId], references: [id])
  applicationId String?      @map("application_id") @db.VarChar(255)

  @@map("application_assets")
}

model ApplicationType {
  id          String  @id @db.VarChar(255)
  name        String
  description String?

  @@map("application_types")
}

model TagGroup {
  id       String    @id @db.VarChar(255)
  code     String
  label    String
  tagTypes TagType[]

  account   Account @relation(fields: [accountId], references: [id])
  accountId String  @map("account_id") @db.VarChar(255)

  @@unique([code, accountId])
  @@map("tag_groups")
}

model TagType {
  id    String @id @db.VarChar(255)
  code  String
  label String
  tags  Tag[]

  tagGroup   TagGroup? @relation(fields: [tagGroupId], references: [id])
  tagGroupId String?   @map("tag_group_id") @db.VarChar(255)

  @@unique([code, tagGroupId])
  @@map("tag_types")
}

model Tag {
  id                     String                  @id @db.VarChar(255)
  label                  String
  code                   String
  tagType                TagType?                @relation(fields: [tagTypeId], references: [id])
  tagTypeId              String?                 @map("tag_type_id") @db.VarChar(255)
  applicationLinks       ApplicationLink[]
  applicationTeamMembers ApplicationTeamMember[]
  applicationTags        ApplicationTag[]

  @@map("tags")
}
